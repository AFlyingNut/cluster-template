crds:
  install: true
global:
  domain: argocd.<domain>
configs:
  params:
    server.insecure: true
  cm:
    statusbadge.enabled: true
    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"
  secret:
    argocdServerAdminPassword: <argocd_password>
    githubSecret: <webhook_token>
  cmp:
    plugins:
      --- First plugin
      avp-kustomize:
        allowConcurrency: true
        # Note: this command is run _before_ anything is done, therefore the logic is to check
        # if this looks like a Kustomize bundle
        discover:
          find:
            command:
              - find
              - "."
              - -name
              - kustomization.yaml
        generate:
          command:
            - sh
            - "-c"
            - "kustomize build . | argocd-vault-plugin generate -"
        lockRepo: false

      --- Second plugin
      avp-helm:
        allowConcurrency: true
        # Note: this command is run _before_ any Helm templating is done, therefore the logic is to check
        # if this looks like a Helm chart
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
        generate:
          # **IMPORTANT**: passing `${ARGOCD_ENV_HELM_ARGS}` effectively allows users to run arbitrary code in the Argo CD
          # repo-server (or, if using a sidecar, in the plugin sidecar). Only use this when the users are completely trusted. If
          # possible, determine which Helm arguments are needed by your users and explicitly pass only those arguments.
          command:
            - sh
            - "-c"
            - |
              helm template $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE ${ARGOCD_ENV_HELM_ARGS} . |
              argocd-vault-plugin generate -
        lockRepo: false

      --- Third plugin
      avp:
        allowConcurrency: true
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
        generate:
          command:
            - argocd-vault-plugin
            - generate
            - "."
        lockRepo: false
controller:
  metrics:
    enabled: true
    applicationLabels:
      enabled: true
    serviceMonitor: &service-monitor
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
dex:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
redis:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
server:
  allowAnyNamespace: true
  certificate:
    enabled: true
    secretName: argocd-server-tls
    domain:  argocd.<domain>
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: <cert_issuer>
  ingress:
    enabled: true
    ingressClassName: external
    annotations:
      external-dns.alpha.kubernetes.io/target: external.<domain>
    hostname: argocd.<domain>
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
notifications:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
repoServer:
  env:
    - name: SOPS_AGE_KEY_FILE # For age
      value: /sops-age/key.txt
    - name: AVP_TYPE
      value: sops
  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: sops-age
      secret:
        secretName: sops-age
  volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
    - mountPath: /sops-age/
      name: sops-age
  initContainers:
    - name: download-tools
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      command: [sh, -ec]
      env:
        - name: AVP_VERSION
          value: 1.18.1
        - name: SOPS_VERSION
          value: 3.8.1
      args:
        - |
          mkdir -p /custom-tools/
          wget -qO /custom-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64
          wget -qO /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64
          chmod +x /custom-tools/*
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools

  extraContainers:
    - name: avp-helm
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: registry.access.redhat.com/ubi8
      env:
        - name: SOPS_AGE_KEY_FILE # For age
          value: /sops-age/key.txt
        - name: AVP_TYPE
          value: sops
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-helm.yaml
          name: cmp-plugin

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
    - name: avp-kustomize
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: registry.access.redhat.com/ubi8
      env:
        - name: SOPS_AGE_KEY_FILE # For age
          value: /sops-age/key.txt
        - name: AVP_TYPE
          value: sops
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-kustomize.yaml
          name: cmp-plugin

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
    - name: avp
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: registry.access.redhat.com/ubi8
      env:
        - name: SOPS_AGE_KEY_FILE # For age
          value: /sops-age/key.txt
        - name: AVP_TYPE
          value: sops
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp.yaml
          name: cmp-plugin

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin


